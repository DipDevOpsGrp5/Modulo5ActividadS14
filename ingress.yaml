---
apiVersion: v1
kind: Namespace
metadata:
 name: minikube-example
 labels:
   name: minikube-example
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: hello-app
 labels:
   app: hello-app
spec:
 strategy: 
  type: RollingUpdate
  rollingUpdate:
   maxSurge: 2
   maxUnavailable: 1
 replicas: 2
 selector:
   matchLabels:
     app: hello-app
 template:
   metadata:
     labels:
       app: hello-app
   spec:
     containers:
     - name: hello-app
       image: gcr.io/google-samples/hello-app:1.0
       readinessProbe:
          httpGet:
            path: /
            port: 8080
          successThreshold: 3
       env:
       - name: HELLO_VAR
         value: "8080"
       envFrom:
       - configMapRef:
           name: configmap-env-pod
       ports:
       - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: insights-app
 labels:
   app: insights-app
spec:
 strategy: 
  type: RollingUpdate
  rollingUpdate:
   maxSurge: 2
   maxUnavailable: 1
 replicas: 2
 selector:
   matchLabels:
     app: insights-app
 template:
   metadata:
     labels:
       app: insights-app
   spec:
     containers:
     - name: insights-app
       image: yeasy/simple-web:latest
       ports:
       - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
 name: hello-app
 labels:
   name: hello-app
spec:
 type: NodePort
 ports:
   - port: 8080
     name: http
 selector:
   app: hello-app
---
apiVersion: v1
kind: Service
metadata:
 name: insights-app
 labels:
   name: insights-app
spec:
 type: NodePort
 ports:
   - port: 80
     name: http
 selector:
   app: insights-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: minikube-example-ingress
 annotations:
   nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
 rules:
   - host: minikube-example.com
     http:
       paths:
         - path: /hello
           pathType: Prefix
           backend:
             service:
               name: hello-app
               port:
                 number: 8080   
         - path: /insights
           pathType: Prefix
           backend:
             service:
               name: insights-app
               port:
                 number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: configmap-env-pod
data:
 I_VALUE: red
 APP_COLOR: blue
 DB_USER: root
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-exec
spec:
  containers:
  - name: liveness
    image: k8s.gcr.io/liveness
    args:
    - /server
    livenessProbe:
      httpGet:
        path: /hello
        port: 8080
        httpHeaders:
        - name: Custom-Header
          value: Awesome
      initialDelaySeconds: 5
      periodSeconds: 5
---
apiVersion: "autoscaling/v2"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "autoscaler"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "hello-app"
    apiVersion: "apps/v1"
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: hello-load-balancer
spec:
  selector:
    app: example
  ports:
    - port: 8081
      targetPort: 8081
  type: LoadBalancer